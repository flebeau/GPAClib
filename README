#############
#  GPAClib  #
#############

Circuit specification format
============================
Lines beginning with # are ignored (comment lines).

First way to define a circuit: by specifying gates. Syntax:

    Circuit <circuit_name>:
	    <gate_name>: ....
	    <gate_name>: ....
	    <gate_name>: ....
	;

Circuit names cannot contain spaces and should not be named as builtin circuits provided in the following.
Moreover, "t" is a reserved name and circuit names should not be confusable with floating point numbers.

The gate specification is the following:
  - for integration gate: int <integrated> d(<variable>) | <initial_value>
  - for product gate (alternative syntax): <operand1> * <operand2>
  - for addition gate: <operand1> + <operand2>
  - for constant gate: <value>

Operands are names of gates defined (before or after) in the same circuit or "t". Gate names cannot be empty, start with underscore and "t" is reserved.

The second way to define a circuit is by combination of previously defined circuits. Syntax:

    Circuit <circuit_name> = <expression>

where expressions are defined with the following grammar:
    expr ::= identifier | (expr + expr) | (expr * expr) | (expr @ expr)

The @ operator corresponds to composition of circuits. An identifier is the name of a previously defined circuit, or the name of a builtin circuits, or "t". 
  
List of builtin circuits:
  - Exp: exponential
  - Sin/Cos: sinus and cosinus
  - Id: identity (same as "t")